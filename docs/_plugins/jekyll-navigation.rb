module Jekyll
  # Navigation plugin for Jekyll
  # Provides automatic navigation based on directory structure and front matter
  class NavigationGenerator < Generator
    safe true
    priority :low

    def generate(site)
      @site = site
      @navigation = []
      @pages_by_parent = {}
      @pages_by_grandparent = {}

      # First pass: categorize pages by parent and grandparent
      @site.pages.each do |page|
        next if page.data['exclude_from_nav'] # Skip if excluded

        # Skip pages without titles
        next unless page.data['title']

        parent_title = page.data['parent']
        grandparent_title = page.data['grand_parent']

        if grandparent_title && parent_title
          @pages_by_grandparent[grandparent_title] ||= {}
          @pages_by_grandparent[grandparent_title][parent_title] ||= []
          @pages_by_grandparent[grandparent_title][parent_title] << page
        elsif parent_title
          @pages_by_parent[parent_title] ||= []
          @pages_by_parent[parent_title] << page
        elsif is_index_page(page) || page.data['nav_order']
          # Top-level pages (index pages or pages with nav_order)
          add_to_navigation(page)
        end
      end

      # Second pass: add children to their parents
      @navigation.each do |item|
        process_children(item)
      end

      # Sort navigation items
      sort_navigation(@navigation)

      # Add navigation to site config
      @site.config['autogenerated_navigation'] = @navigation
    end

    private

    def is_index_page(page)
      page.name == 'index.md' || page.name == 'index.html'
    end

    def add_to_navigation(page)
      item = create_nav_item(page)
      @navigation << item
      item
    end

    def process_children(parent_item)
      children = @pages_by_parent[parent_item['title']]

      if children
        parent_item['has_children'] = true
        parent_item['children'] ||= []

        children.each do |child_page|
          child_item = create_nav_item(child_page)
          parent_item['children'] << child_item
          process_children(child_item)
        end

        sort_navigation(parent_item['children'])
      end
    end

    def create_nav_item(page)
      item = {
        'title' => page.data['title'],
        'url' => page.url,
        'nav_order' => page.data['nav_order'] || (is_index_page(page) ? 1 : 999),
        'grand_parent' => page.data['grand_parent']
      }

      # Add children flag if specified
      item['has_children'] = true if page.data['has_children']

      item
    end

    def sort_navigation(items)
      items.sort_by! { |item| [item['nav_order'], item['title']] }
    end
  end
end
